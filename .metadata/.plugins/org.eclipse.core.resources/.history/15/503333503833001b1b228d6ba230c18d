package letrasAbecedario;

public class LetrasAbecedario extends Thread 
{
	/*
	 Palabra reservada que permite el acceso directo desde memoria principal del valor de la variable.
	 Es decir, los objetos no guardarán su copia sino que accederán a ella directamente desde memoria principal.
	 Este modificador SOLO se puede utilizar sobre atributos, sin embargo, synchornized puede sobre clases y métodos.
	 */
    public volatile static int turno; 
	private int veces;
	private char letra;
	private int id;
	
	public LetrasAbecedario(int vuelta, char letra, int i) 
	{
		this.turno = 0;
		this.veces = vuelta;
		this.letra = letra;
		this.id = i;
	}
	
	public void run() 
	{
		while(turno!=id);
		for(int k = 0; k < veces; k++) 
		{
			System.out.print(letra);
		}
		turno = (turno+1)%3;
	}

	public static void main(String[] args) throws InterruptedException 
	{
		LetrasAbecedario h1, h2, h3;
		h1 = new LetrasAbecedario(12, 'A', 0);
		h2 = new LetrasAbecedario(2, 'B', 1);
		h3 = new LetrasAbecedario(3, 'C', 2);
		
		h1.start();
		h2.start();
		h3.start();
		try 
		{
			h1.join();
			h2.join();
			h3.join();
		} catch(InterruptedException e) 
		{
			throw new InterruptedException();
		}
	}
}
